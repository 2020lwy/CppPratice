数据结构主要研究如何使用存储区记录数字
算法研究解决常见问题的通用方法

数字之间与计算机无关的关系叫做逻辑关系
    或逻辑结构

逻辑结构分为以下几种
1.集合结构：所有数字可以被看做一个
      整体`
2.线性结构：可以用一条有顺序的线把所有
      数字串起来
3.树状结构：所有数字都从一个数字开始向
      一个方向扩展出来的,任何数字可以
      扩展出多个其他数字
4.网状结构：任何两个数字之间都可以有
         直接的联系，不同数字之间的
         联系是互相无关的

存储区之间的关系叫做数字之间的物理结构

物理结构包含如下两种
1.顺序结构：存储区在内存里连续排列
            数组和动态分配内存都是顺序
               结构的例子
            顺序结构里每个存储区有一个
               唯一的编号，可以直接通过
               编号找到对应的存储区
            通过编号找到存储区的能力叫
               随机访问能力，这是顺序
               结构的一个优势
            顺序结构适合进行查找操作
            顺序结构里包含的存储区个数
               很难调整，所以容易造成
               浪费
            顺序结构不适合进行插入或删除
               操作

2.链式结构：由多个相互独立的存储区构成，
            任何两个存储区之间可以用
            指针连接
            链式物理结构里每个存储区都是
             一个结构体类型的存储区，它们
             叫做节点
            单向线性链式物理结构中任何
              两个节点之间都有前后顺序
              (每个节点里只需要包含一个
               指针)
            单向线性链式物理结构中最后
              一个节点里的指针必须是
              空指针
            可以在单向线性链式物理结构
              的最前面增加一个无效节点，
              这个节点叫做头节点
            可以在单向线性链式物理结构
              的最后面增加一个无效节点，
              这个节点叫尾节点
            单向线性链式物理结构不支持
              随机访问能力，不适合进行
              数据查找操作
            链式物理结构适合进行插入和
              删除操作
            链式物理结构里节点个数可以
              自由调整(通过使用动态分配
                节点实现)

数据结构由一组存储区和相关的管理函数
   构成
这些函数提供了对存储区的使用方法
只有数据结构的函数可以直接操作数据
   结构的存储区

栈是一种数据结构
一次只能向栈里放一个数字，一次也只能
   从栈里获得一个数字
栈里的数字有前后顺序
先进入的数字在前，后进入的数字在后
每次从栈里获得的一定是最后一个放进去
   的数字
这种使用数字的规则叫后进先出
编写栈的时候需要提供一个push函数负责向
   栈里加入数字
编写栈的时候需要提供一个pop函数负责从
   栈里获得数字

预习：
  1.队列
  2.链表







